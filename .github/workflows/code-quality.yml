name: Code Quality

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort mypy pylint radon

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file=flake8-report.txt

    - name: Check code formatting with black
      run: |
        black --check --diff . || echo "Code formatting issues found"

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff . || echo "Import sorting issues found"

    - name: Type checking with mypy
      run: |
        mypy . --ignore-missing-imports --no-strict-optional --output-file=mypy-report.txt || echo "Type checking issues found"

    - name: Lint with pylint
      run: |
        pylint --output-format=text $(find . -name "*.py" | grep -E "(main|config|utils|core|database|tests)" | head -20) > pylint-report.txt || echo "Pylint issues found"

    - name: Calculate cyclomatic complexity
      run: |
        radon cc . --show-complexity --min=B > complexity-report.txt
        radon mi . > maintainability-report.txt

    - name: Generate code quality summary
      run: |
        echo "## Code Quality Report" > code-quality-summary.md
        echo "" >> code-quality-summary.md
        echo "### Flake8 Issues" >> code-quality-summary.md
        echo '```' >> code-quality-summary.md
        tail -n 5 flake8-report.txt >> code-quality-summary.md
        echo '```' >> code-quality-summary.md
        echo "" >> code-quality-summary.md
        echo "### Complexity Analysis" >> code-quality-summary.md
        echo '```' >> code-quality-summary.md
        head -n 10 complexity-report.txt >> code-quality-summary.md
        echo '```' >> code-quality-summary.md

    - name: Upload code quality reports
      uses: actions/upload-artifact@v4
      with:
        name: code-quality-reports
        path: |
          flake8-report.txt
          mypy-report.txt
          pylint-report.txt
          complexity-report.txt
          maintainability-report.txt
          code-quality-summary.md

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Check for known security vulnerabilities
      run: |
        safety check --json --output safety-report.json || echo "Safety check completed with warnings"
        pip-audit --format=json --output=pip-audit-report.json || echo "Pip audit completed with warnings"

    - name: Generate dependency report
      run: |
        echo "## Dependency Security Report" > dependency-report.md
        echo "" >> dependency-report.md
        echo "### Python Dependencies" >> dependency-report.md
        pip list --format=freeze > dependencies.txt
        echo '```' >> dependency-report.md
        head -n 20 dependencies.txt >> dependency-report.md
        echo '```' >> dependency-report.md

    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          safety-report.json
          pip-audit-report.json
          dependency-report.md
          dependencies.txt
