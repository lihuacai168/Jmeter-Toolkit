[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jmeter-toolkit"
version = "2.0.0"
description = "A powerful JMeter test management toolkit built with FastAPI"
# readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "JMeter Toolkit Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]
requires-python = ">=3.9"
dependencies = [
    # Web framework
    "fastapi>=0.104.1,<0.120.0",
    "uvicorn[standard]>=0.24.0,<0.35.0",
    "python-multipart>=0.0.6,<1.0.0",

    # Database
    "sqlalchemy>=2.0.23,<2.1.0",
    "psycopg2-binary>=2.9.9,<2.10.0",
    "alembic>=1.12.1,<1.15.0",

    # Task queue
    "celery>=5.3.4,<6.0.0",
    "redis>=5.0.1,<6.0.0",

    # Configuration
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.0.3,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",

    # Security
    "python-magic>=0.4.27,<0.5.0",
    "cryptography>=44.0.0,<46.0.0",

    # Logging
    "loguru>=0.7.2,<0.8.0",

    # Monitoring
    "prometheus-client>=0.19.0,<0.22.0",
    "psutil>=5.9.6,<6.0.0",

    # Utilities
    "PyYAML>=6.0.1,<7.0.0",
    "starlette>=0.27.0,<0.40.0",
    "jinja2>=3.1.2,<4.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.23.8",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.2",
]
dev = [
    "black>=23.11.0,<25.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<8.0.0",
    "mypy>=1.7.1,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
]
docs = [
    "mkdocs>=1.5.3,<2.0.0",
    "mkdocs-material>=9.4.8,<10.0.0",
]
all = [
    "jmeter-toolkit[test,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/lihuacai168/Jmeter-Toolkit"
Repository = "https://github.com/lihuacai168/Jmeter-Toolkit"
Issues = "https://github.com/lihuacai168/Jmeter-Toolkit/issues"

[project.scripts]
jmeter-toolkit = "main:main"

[tool.hatch.build.targets.wheel]
packages = ["."]
exclude = [
    "/.git",
    "/.github",
    "/docs",
    "/tests",
    "/venv",
    "/.venv",
    "/htmlcov",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    "__pycache__",
    "*.db",
    "*.log",
    "*.tar.gz",
    "/jmx_files",
    "/jtl_files",
    "/reports",
]

[tool.black]
line-length = 127
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
  | htmlcov
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "venv/*", "htmlcov/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv/",
    "htmlcov/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/htmlcov/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "setup.py",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", "venv", "htmlcov"]
skips = ["B101", "B601"]  # Skip assert_used and shell injection warnings in tests

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "import-error",
    "no-name-in-module",
]

[tool.pylint.format]
max-line-length = 127
