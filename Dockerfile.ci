# Install uv
FROM python:3.11-slim AS builder
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Set working directory
WORKDIR /app

# Install dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --no-install-project --no-editable

# Copy minimal application files for CI
COPY main.py dev_server.py ./
COPY config/ config/
COPY database/ database/
COPY models/ models/
COPY pyproject.toml ./

# Sync the project (skip build validation)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --no-editable --no-build

# CI stage
FROM python:3.11-slim

# Set environment variables for CI
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=development
ENV DATABASE_URL=sqlite:///./ci_test.db
ENV DEBUG=true

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy the virtual environment from builder stage
COPY --from=builder /app/.venv /app/.venv

# Copy application files
COPY --from=builder /app /app

# Create required directories
RUN mkdir -p jmx_files jtl_files reports static templates

# Create test database file
RUN touch ci_test.db

# Expose port
EXPOSE 8000

# Start with development server for CI testing
CMD ["/app/.venv/bin/python", "-m", "uvicorn", "dev_server:app", "--host", "0.0.0.0", "--port", "8000"]
