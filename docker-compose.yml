version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jmeter_toolkit
      POSTGRES_USER: jmeter
      POSTGRES_PASSWORD: jmeter
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jmeter -d jmeter_toolkit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://jmeter:jmeter@postgres:5432/jmeter_toolkit
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEBUG=false
      - LOG_LEVEL=INFO
    volumes:
      - ./jmx_files:/app/jmx_files
      - ./jtl_files:/app/jtl_files
      - ./reports:/app/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A utils.celery_app worker --loglevel=info --concurrency=2
    environment:
      - DATABASE_URL=postgresql://jmeter:jmeter@postgres:5432/jmeter_toolkit
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./jmx_files:/app/jmx_files
      - ./jtl_files:/app/jtl_files
      - ./reports:/app/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/app/.venv/bin/celery", "-A", "utils.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Beat (Optional - for scheduled tasks)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A utils.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://jmeter:jmeter@postgres:5432/jmeter_toolkit
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./jmx_files:/app/jmx_files
      - ./jtl_files:/app/jtl_files
      - ./reports:/app/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Flower (Celery Monitoring) - Optional
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A utils.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery-worker

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge
